@startuml Players Play a WoJ Game

participant Client1 #lightblue
participant Client2 #lightblue
Client1 -> Server: connect(svrIP, svrPort)
Client1 <- Server: send("PlayerID", ID)
Client2 -> Server: connect(svrIP, svrPort)
Client2 -> Server: send("PlayerID", ID)


Server -> ExecutiveLogic : startGame([playerID])
loop 2 rounds
    ExecutiveLogic -> ExecutiveLogic: incrementRound()

    == START ROUND ==
    loop number of spins < 50 and board is not empty
        == START TURN ==
        Server <- ExecutiveLogic : whoseTurn()

        group Prompt Player to Spin
            Client1 <- Server: send("pleaseSpin", playerID)

            alt Player responds

                Client1 -> Server: send("Spin Wheel")
                Server -> ExecutiveLogic: spinRequest()

            else No player response
                Server -> ExecutiveLogic: timeout()
                ExecutiveLogic -> ExecutiveLogic: nextPlayer()

            end
        end

        ExecutiveLogic -> GameBoard : getAvailableCategories()
        ExecutiveLogic -> Wheel : updateCategories()
        ExecutiveLogic -> Wheel : getSpinResult()
        ExecutiveLogic -> ExecutiveLogic : incrementSpinCounter()



        ref over Client1, ScoreKeeper
            Respond to Wheel Spin
        end ref

    end
end
    == END GAME ==

    ExecutiveLogic -> ScoreKeeper: determineWinner()
    ExecutiveLogic -> Server: endGame(winner)

    Client1 <- Server: send("GAMEOVER", playerID)
    Client2 <- Server: send("GAMEOVER", playerID)


@enduml