@startuml Players Play a WoJ Game
title Players Play a WoJ Game
skinparam sequenceReferenceBackgroundColor palegreen
skinparam sequenceReferenceHeaderBackgroundColor  mediumseagreen

actor ActivePlayer as Player1 #Orange 
actor Opponent as Player2 #blue

boundary    UI1
boundary    UI2  

participant Client1 #Plum
participant Client2 #Plum

box "Game Server" #LightSteelBlue
participant MessageServer as Server
participant ExecutiveLogic
participant GameBoard
participant ScoreKeeper
participant Wheel

Client1 -> Server: connect(svrIP, svrPort)
Client1 <- Server: send("PlayerID", ID)

Client2 -> Server: connect(svrIP, svrPort)
Client2 -> Server: send("PlayerID", ID)


Server -> ExecutiveLogic : startGame([playerID])
loop#Gold 2 times
    ExecutiveLogic -> ExecutiveLogic: incrementRound()

    ExecutiveLogic -> GameBoard : getAvailableCategories(round)
    ExecutiveLogic <-- GameBoard : [available]
    ExecutiveLogic -> Wheel : updateCategories([available])
    == START ROUND ==
    loop#Gold number of spins < 50 and board is not empty
        == START TURN ==

        ref over Player1, Wheel
            Prompt Player to Spin Wheel
        end ref



        ref#Cyan over UI1, ExecutiveLogic
            Send Spin Result to Players
        end ref

        ref over Player1, ScoreKeeper
            Respond to Wheel Spin
        end ref

    end
end
    == END GAME ==

    ExecutiveLogic -> ScoreKeeper: determineWinner()
    ExecutiveLogic -> Server: endGame(winner)

    Client1 <- Server: send("GAMEOVER", playerID)
    Client2 <- Server: send("GAMEOVER", playerID)


@enduml